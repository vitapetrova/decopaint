// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-facebook-name: 'icon-facebook';
$icon-facebook-x: 0px;
$icon-facebook-y: 0px;
$icon-facebook-offset-x: 0px;
$icon-facebook-offset-y: 0px;
$icon-facebook-width: 44px;
$icon-facebook-height: 45px;
$icon-facebook-total-width: 133px;
$icon-facebook-total-height: 116px;
$icon-facebook-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-facebook: (0px, 0px, 0px, 0px, 44px, 45px, 133px, 116px, "<℅= asset_path('sprites/sprite.png')", 'icon-facebook', );
$icon-googleplus-name: 'icon-googleplus';
$icon-googleplus-x: 44px;
$icon-googleplus-y: 0px;
$icon-googleplus-offset-x: -44px;
$icon-googleplus-offset-y: 0px;
$icon-googleplus-width: 44px;
$icon-googleplus-height: 45px;
$icon-googleplus-total-width: 133px;
$icon-googleplus-total-height: 116px;
$icon-googleplus-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-googleplus: (44px, 0px, -44px, 0px, 44px, 45px, 133px, 116px, "<℅= asset_path('sprites/sprite.png') %>", 'icon-googleplus', );
$icon-instagramm-name: 'icon-instagramm';
$icon-instagramm-x: 88px;
$icon-instagramm-y: 0px;
$icon-instagramm-offset-x: -88px;
$icon-instagramm-offset-y: 0px;
$icon-instagramm-width: 45px;
$icon-instagramm-height: 44px;
$icon-instagramm-total-width: 133px;
$icon-instagramm-total-height: 116px;
$icon-instagramm-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-instagramm: (88px, 0px, -88px, 0px, 45px, 44px, 133px, 116px, "<%= asset_path('sprites/sprite.png') %>", 'icon-instagramm', );
$icon-viber-name: 'icon-viber';
$icon-viber-x: 0px;
$icon-viber-y: 89px;
$icon-viber-offset-x: 0px;
$icon-viber-offset-y: -89px;
$icon-viber-width: 27px;
$icon-viber-height: 27px;
$icon-viber-total-width: 133px;
$icon-viber-total-height: 116px;
$icon-viber-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-viber: (0px, 89px, 0px, -89px, 27px, 27px, 133px, 116px, "<%= asset_path('sprites/sprite.png') %>", 'icon-viber', );
$icon-vk-name: 'icon-vk';
$icon-vk-x: 0px;
$icon-vk-y: 45px;
$icon-vk-offset-x: 0px;
$icon-vk-offset-y: -45px;
$icon-vk-width: 45px;
$icon-vk-height: 44px;
$icon-vk-total-width: 133px;
$icon-vk-total-height: 116px;
$icon-vk-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-vk: (0px, 45px, 0px, -45px, 45px, 44px, 133px, 116px, "<%= asset_path('sprites/sprite.png') %>", 'icon-vk', );
$icon-whatsapp-name: 'icon-whatsapp';
$icon-whatsapp-x: 88px;
$icon-whatsapp-y: 45px;
$icon-whatsapp-offset-x: -88px;
$icon-whatsapp-offset-y: -45px;
$icon-whatsapp-width: 28px;
$icon-whatsapp-height: 27px;
$icon-whatsapp-total-width: 133px;
$icon-whatsapp-total-height: 116px;
$icon-whatsapp-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-whatsapp: (88px, 45px, -88px, -45px, 28px, 27px, 133px, 116px, "<%= asset_path('sprites/sprite.png') %>", 'icon-whatsapp', );
$icon-youtube-name: 'icon-youtube';
$icon-youtube-x: 45px;
$icon-youtube-y: 45px;
$icon-youtube-offset-x: -45px;
$icon-youtube-offset-y: -45px;
$icon-youtube-width: 43px;
$icon-youtube-height: 43px;
$icon-youtube-total-width: 133px;
$icon-youtube-total-height: 116px;
$icon-youtube-image: "<%= asset_path('sprites/sprite.png') %>";
$icon-youtube: (45px, 45px, -45px, -45px, 43px, 43px, 133px, 116px, "<%= asset_path('sprites/sprite.png') %>", 'icon-youtube', );
$spritesheet-width: 133px;
$spritesheet-height: 116px;
$spritesheet-image: "<%= asset_path('sprites/sprite.png') %>";
$spritesheet-sprites: ($icon-facebook, $icon-googleplus, $icon-instagramm, $icon-viber, $icon-vk, $icon-whatsapp, $icon-youtube, );
$spritesheet: (133px, 116px, "<%= asset_path('sprites/sprite.png') %>", $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
